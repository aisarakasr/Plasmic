// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: ibfR7vmr1rPFsEqk4Lonig
// Component: 9K4d8IPAiFHB
import * as React from "react";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Navbar from "../../Navbar"; // plasmic-import: sKY1DHsbffbU/component
import Button from "../../Button"; // plasmic-import: rAcYS8s5mLjUI/component
import Section from "../../Section"; // plasmic-import: 8FZnvWGwCCQxJ/component
import DiagramCard from "../../DiagramCard"; // plasmic-import: Qi0ShKRJYJRt_/component
import ProductCard from "../../ProductCard"; // plasmic-import: ZvTcBteXOIHCP/component
import DetailAbout from "../../DetailAbout"; // plasmic-import: q-8sbgtQX1z0z/component
import PriceSection from "../../PriceSection"; // plasmic-import: uNGEa4X6K63Lt/component
import PriceCard from "../../PriceCard"; // plasmic-import: EYvkRkRe4i_Ck/component
import FooterSection from "../../FooterSection"; // plasmic-import: yfti2SujIofs6/component

import { useScreenVariants as useScreenVariantscW6UBg7QZKq } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: cW6U_bg7q_zKq/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_dark_saa_s_landing_page.module.css"; // plasmic-import: ibfR7vmr1rPFsEqk4Lonig/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: 9K4d8IPAiFHB/css

import IconArrowRightsvgIcon from "./icons/PlasmicIcon__IconArrowRightsvg"; // plasmic-import: wri9n3EW7VwQj/icon
import diagramsvgYkmb0Djk5HD from "./images/diagramsvg.svg"; // plasmic-import: ykmb0DJK5-h_D/picture
import logoHero1PngUgKujdz5Vo1T7 from "./images/logoHero1Png.png"; // plasmic-import: UgKujdz5VO1t7/picture
import logoHero2Png6ZkQB0LjVu2Q from "./images/logoHero2Png.png"; // plasmic-import: 6zkQ_B0ljVu2q/picture
import logoHero3PngXVggln3VOzoTf from "./images/logoHero3Png.png"; // plasmic-import: XVggln3vOzoTF/picture
import logoHero4Png0TpOjHv3NsGkf from "./images/logoHero4Png.png"; // plasmic-import: 0TpOJHv3NSGkf/picture
import diagramImgsvgA8ZoWahJFr6H from "./images/diagramImgsvg.svg"; // plasmic-import: a8ZOWahJFr-6H/picture
import ellipseLeftpngBohpNWcPmUu1J from "./images/ellipseLeftpng.png"; // plasmic-import: bohpNWcPmUu1j/picture
import ellipseRightpngS7CtHBuDmQ09P from "./images/ellipseRightpng.png"; // plasmic-import: s7CtHBuDmQ09P/picture
import terminalpng5CQyCnuuyo7B from "./images/terminalpng.png"; // plasmic-import: 5c-QyCNUUYO7b/picture
import line1PngEpm9Y9T8UgYhG from "./images/line1Png.png"; // plasmic-import: Epm9y9t8UgYhG/picture
import lineBranchpngL5U3BYsRmfz5T from "./images/lineBranchpng.png"; // plasmic-import: l5u3BYsRMFZ5t/picture
import line2Png8L8Sdo5KpQwrJ from "./images/line2Png.png"; // plasmic-import: 8l8Sdo5KPQwrJ/picture
import dollarpngUwNWuslVpM5Bg from "./images/dollarpng.png"; // plasmic-import: UwNWuslVpM5bg/picture
import messagepngF53B4JwhAfYy8 from "./images/messagepng.png"; // plasmic-import: F53b4JwhAfYy8/picture
import importpng5ZHcUlmqTqnm2 from "./images/importpng.png"; // plasmic-import: 5zHcUlmqTQNM2/picture
import exportpngGUezgXjZ8RMaW from "./images/exportpng.png"; // plasmic-import: gUEZGXjZ8rMaW/picture
import message2Png1Kl2LbfUvDzGq from "./images/message2Png.png"; // plasmic-import: 1Kl2lbfUvDZGq/picture
import message3PngD4BbIcUhBiOz4 from "./images/message3Png.png"; // plasmic-import: D4BBIcUHBiOz4/picture
import macbookpngEvE3PrLUxAfA from "./images/macbookpng.png"; // plasmic-import: evE3PrL_UxAfA/picture
import galleri11PngWyl41FfXgpsy2 from "./images/galleri11Png.png"; // plasmic-import: wyl41FFXgpsy2/picture
import galleri12PngQA7NgXuUmLmDn from "./images/galleri12Png.png"; // plasmic-import: qA7NgXuUmLMDn/picture
import galleri13PngJjccKjCldDgm from "./images/galleri13Png.png"; // plasmic-import: JjccKJ_CldDgm/picture
import galleri21PngDwtQc2QXpUqzz from "./images/galleri21Png.png"; // plasmic-import: dwtQC2qXpUqzz/picture
import galleri22PngU7M2Eth9Vg0Iz from "./images/galleri22Png.png"; // plasmic-import: u7M2ETH9VG0Iz/picture
import galleri23PngOer3XeAxtePgz from "./images/galleri23Png.png"; // plasmic-import: oer3XeAXTEPgz/picture
import aboutImgpngKOtm3R0VUf5R from "./images/aboutImgpng.png"; // plasmic-import: k_Otm3R0vUF5R/picture
import aboutIpsumpngCkVGaZkLbo89 from "./images/aboutIpsumpng.png"; // plasmic-import: CkV_GAZkLBO89/picture
import backtippngEE9To8Qz8XEkX from "./images/backtippng.png"; // plasmic-import: eE9to8qz8XEkX/picture
import arrowLeftpng0FXeSj3JqjF7G from "./images/arrowLeftpng.png"; // plasmic-import: 0fXeSj3jqjF7g/picture
import arrowRightpng2BiWqcf7DjW7XG from "./images/arrowRightpng2.png"; // plasmic-import: biWQCF7djW7xG/picture
import pricingImgsvgTEWj4C4ZDvCf from "./images/pricingImgsvg.svg"; // plasmic-import: tEWj4c4z_DVCf/picture

export type PlasmicHomepage__VariantMembers = {};
export type PlasmicHomepage__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage__VariantsArgs;
export const PlasmicHomepage__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage__ArgsType = {};
type ArgPropType = keyof PlasmicHomepage__ArgsType;
export const PlasmicHomepage__ArgProps = new Array<ArgPropType>();

export type PlasmicHomepage__OverridesType = {
  root?: p.Flex<"div">;
  headerHeroSection?: p.Flex<"div">;
  navbar?: p.Flex<typeof Navbar>;
  h1?: p.Flex<"h1">;
  diagramSection?: p.Flex<typeof Section>;
  deviceSection?: p.Flex<typeof Section>;
  gallerySection?: p.Flex<typeof Section>;
  productSection?: p.Flex<typeof Section>;
  aboutSection?: p.Flex<typeof Section>;
  priceSection?: p.Flex<typeof PriceSection>;
  startSection?: p.Flex<typeof Section>;
  h3?: p.Flex<"h3">;
  pricingSection?: p.Flex<typeof Section>;
  footerSection?: p.Flex<typeof FooterSection>;
};

export interface DefaultHomepageProps {
  className?: string;
}

function PlasmicHomepage__RenderFunc(props: {
  variants: PlasmicHomepage__VariantsArgs;
  args: PlasmicHomepage__ArgsType;
  overrides: PlasmicHomepage__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };

  const currentUser = p.useCurrentUser?.() || {};

  const [$queries, setDollarQueries] = React.useState({});

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantscW6UBg7QZKq()
  });

  return (
    <React.Fragment>
      {}

      <div className={projectcss.plasmic_page_wrapper}>
        {(hasVariant(globalVariants, "screen", "mobileOnly") ? true : true) ? (
          <div
            data-plasmic-name={"root"}
            data-plasmic-override={overrides.root}
            data-plasmic-root={true}
            data-plasmic-for-node={forNode}
            className={classNames(
              projectcss.all,
              projectcss.root_reset,
              projectcss.plasmic_default_styles,
              projectcss.plasmic_mixins,
              projectcss.plasmic_tokens,
              sty.root
            )}
          >
            {true ? (
              <p.Stack
                as={"div"}
                data-plasmic-name={"headerHeroSection"}
                data-plasmic-override={overrides.headerHeroSection}
                hasGap={true}
                className={classNames(projectcss.all, sty.headerHeroSection)}
              >
                {true ? (
                  <Navbar
                    data-plasmic-name={"navbar"}
                    data-plasmic-override={overrides.navbar}
                    className={classNames("__wab_instance", sty.navbar)}
                  />
                ) : null}

                <div
                  className={classNames(projectcss.all, sty.freeBox___4OXnj)}
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__jsNc)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__bY0Dx)}
                    >
                      <h1
                        data-plasmic-name={"h1"}
                        data-plasmic-override={overrides.h1}
                        className={classNames(
                          projectcss.all,
                          projectcss.h1,
                          projectcss.__wab_text,
                          sty.h1
                        )}
                      >
                        {hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "Analytics for developers can be better"
                          : "Analytics for \ndevelopers can\nbe better"}
                      </h1>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__dwbct
                        )}
                      >
                        {hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
                          : "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."}
                      </div>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__h3Vn5
                        )}
                      >
                        <Button
                          className={classNames(
                            "__wab_instance",
                            sty.button__gyMse
                          )}
                          color={
                            hasVariant(globalVariants, "screen", "mobileOnly")
                              ? ("blueSmall" as const)
                              : ("blue" as const)
                          }
                          endIcon={
                            (
                              hasVariant(globalVariants, "screen", "mobileOnly")
                                ? true
                                : true
                            ) ? (
                              <IconArrowRightsvgIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__ceSn
                                )}
                                role={"img"}
                              />
                            ) : null
                          }
                          link={"#" as const}
                          showEndIcon={true}
                          startIcon={
                            <svg
                              className={classNames(
                                projectcss.all,
                                sty.svg__fXwn
                              )}
                              role={"img"}
                            />
                          }
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__oSnjR
                            )}
                          >
                            {hasVariant(globalVariants, "screen", "mobileOnly")
                              ? "Try Demo For Free"
                              : "Try Demo For Free"}
                          </div>
                        </Button>

                        {(
                          hasVariant(globalVariants, "screen", "mobileOnly")
                            ? true
                            : true
                        ) ? (
                          <Button
                            className={classNames(
                              "__wab_instance",
                              sty.button___8Ww5Y
                            )}
                            color={
                              hasVariant(globalVariants, "screen", "mobileOnly")
                                ? ("blueBorderSmall" as const)
                                : ("blueBorder" as const)
                            }
                            endIcon={
                              <svg
                                className={classNames(
                                  projectcss.all,
                                  sty.svg___7G7T8
                                )}
                                role={"img"}
                              />
                            }
                            link={"#" as const}
                            startIcon={
                              <svg
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__bJiUr
                                )}
                                role={"img"}
                              />
                            }
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__ahDvv
                              )}
                            >
                              {hasVariant(
                                globalVariants,
                                "screen",
                                "mobileOnly"
                              )
                                ? "Learn More"
                                : "Learn More"}
                            </div>
                          </Button>
                        ) : null}
                      </p.Stack>

                      {(
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? true
                          : false
                      ) ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__bR81
                          )}
                        >
                          <Button
                            className={classNames(
                              "__wab_instance",
                              sty.button___63WrG
                            )}
                            color={"blueBorder" as const}
                            endIcon={
                              <svg
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__uOTny
                                )}
                                role={"img"}
                              />
                            }
                            startIcon={
                              <svg
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__aPyVm
                                )}
                                role={"img"}
                              />
                            }
                          >
                            {"Learn More"}
                          </Button>

                          {(
                            hasVariant(globalVariants, "screen", "mobileOnly")
                              ? true
                              : true
                          ) ? (
                            <Button
                              className={classNames(
                                "__wab_instance",
                                sty.button__bvplf
                              )}
                              color={"blueBorder" as const}
                              endIcon={
                                <svg
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__jymhS
                                  )}
                                  role={"img"}
                                />
                              }
                              startIcon={
                                <svg
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__dlQq
                                  )}
                                  role={"img"}
                                />
                              }
                            >
                              {"Learn More"}
                            </Button>
                          ) : null}
                        </div>
                      ) : null}
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.freeBox__crg50)}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__aqi8O)}
                        displayHeight={"auto" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"none" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={
                          hasVariant(globalVariants, "screen", "mobileOnly")
                            ? ("0px" as const)
                            : ("661px" as const)
                        }
                        displayWidth={
                          hasVariant(globalVariants, "screen", "mobileOnly")
                            ? ("100%" as const)
                            : ("100%" as const)
                        }
                        loading={"lazy" as const}
                        src={{
                          src: diagramsvgYkmb0Djk5HD,
                          fullWidth: 173,
                          fullHeight: 150,
                          aspectRatio: 1.151631
                        }}
                      />
                    </div>
                  </p.Stack>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__kH6Qu
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "Powering with magnificant of Companies"
                      : "Powering with magnificant of Companies"}
                  </div>

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__wZftd)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__bWvMu)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? ("170px" as const)
                          : ("100%" as const)
                      }
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                      src={{
                        src: logoHero1PngUgKujdz5Vo1T7,
                        fullWidth: 233,
                        fullHeight: 50,
                        aspectRatio: undefined
                      }}
                    />

                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__nGmBa)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? ("170px" as const)
                          : ("100%" as const)
                      }
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                      src={{
                        src: logoHero2Png6ZkQB0LjVu2Q,
                        fullWidth: 189,
                        fullHeight: 50,
                        aspectRatio: undefined
                      }}
                    />

                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__quuU0)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? ("170px" as const)
                          : ("100%" as const)
                      }
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                      src={{
                        src: logoHero3PngXVggln3VOzoTf,
                        fullWidth: 194,
                        fullHeight: 50,
                        aspectRatio: undefined
                      }}
                    />

                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img___06L0)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? ("170px" as const)
                          : ("100%" as const)
                      }
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                      src={{
                        src: logoHero4Png0TpOjHv3NsGkf,
                        fullWidth: 189,
                        fullHeight: 50,
                        aspectRatio: undefined
                      }}
                    />
                  </p.Stack>
                </div>
              </p.Stack>
            ) : null}

            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__eLv8T)}
              displayHeight={"auto" as const}
              displayMaxHeight={"none" as const}
              displayMaxWidth={"100%" as const}
              displayMinHeight={"0" as const}
              displayMinWidth={"0" as const}
              displayWidth={"auto" as const}
              loading={"lazy" as const}
              src={{
                src: diagramImgsvgA8ZoWahJFr6H,
                fullWidth: 300,
                fullHeight: 100,
                aspectRatio: 2.987552
              }}
            />

            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__t9MhG)}
              displayHeight={"auto" as const}
              displayMaxHeight={"none" as const}
              displayMaxWidth={"100%" as const}
              displayMinHeight={"0" as const}
              displayMinWidth={"0" as const}
              displayWidth={"774px" as const}
              loading={"lazy" as const}
              src={{
                src: ellipseLeftpngBohpNWcPmUu1J,
                fullWidth: 469,
                fullHeight: 742,
                aspectRatio: undefined
              }}
            />

            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__m3VN)}
              displayHeight={"auto" as const}
              displayMaxHeight={"none" as const}
              displayMaxWidth={"100%" as const}
              displayMinHeight={"0" as const}
              displayMinWidth={"0" as const}
              displayWidth={"auto" as const}
              loading={"lazy" as const}
              src={{
                src: ellipseRightpngS7CtHBuDmQ09P,
                fullWidth: 437,
                fullHeight: 742,
                aspectRatio: undefined
              }}
            />

            <Section
              data-plasmic-name={"diagramSection"}
              data-plasmic-override={overrides.diagramSection}
              className={classNames("__wab_instance", sty.diagramSection)}
              size={
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? ("mobile" as const)
                  : undefined
              }
            >
              <div className={classNames(projectcss.all, sty.freeBox__mp2Yw)}>
                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2__i1L2G
                  )}
                >
                  {hasVariant(globalVariants, "screen", "mobileOnly")
                    ? "Lorem ipsum dolor \nsit amet"
                    : "Lorem ipsum dolor \nsit amet"}
                </h2>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__fwe6N
                  )}
                >
                  {hasVariant(globalVariants, "screen", "mobileOnly")
                    ? "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
                    : "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."}
                </div>

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__boJnW)}
                  displayHeight={"auto" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? ("249px" as const)
                      : ("100%" as const)
                  }
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  loading={"lazy" as const}
                  src={{
                    src: terminalpng5CQyCnuuyo7B,
                    fullWidth: 624,
                    fullHeight: 333,
                    aspectRatio: undefined
                  }}
                />

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__e9Xc4)}
                  displayHeight={"auto" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? ("auto" as const)
                      : ("auto" as const)
                  }
                  loading={"lazy" as const}
                  src={{
                    src: line1PngEpm9Y9T8UgYhG,
                    fullWidth: 11,
                    fullHeight: 150,
                    aspectRatio: undefined
                  }}
                />

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img___3JWV)}
                  displayHeight={"auto" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? ("50px" as const)
                      : ("100%" as const)
                  }
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  loading={"lazy" as const}
                  src={{
                    src: lineBranchpngL5U3BYsRmfz5T,
                    fullWidth: 100,
                    fullHeight: 100,
                    aspectRatio: undefined
                  }}
                />

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__pZtbE)}
                  displayHeight={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? ("auto" as const)
                      : ("auto" as const)
                  }
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? ("500px" as const)
                      : ("770px" as const)
                  }
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? ("auto" as const)
                      : ("auto" as const)
                  }
                  loading={"lazy" as const}
                  src={{
                    src: line2Png8L8Sdo5KpQwrJ,
                    fullWidth: 844,
                    fullHeight: 284,
                    aspectRatio: undefined
                  }}
                />

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__qoLxV)}
                >
                  <DiagramCard
                    className={classNames(
                      "__wab_instance",
                      sty.diagramCard__cO03
                    )}
                  />

                  <DiagramCard
                    className={classNames(
                      "__wab_instance",
                      sty.diagramCard__dHReu
                    )}
                  />

                  <DiagramCard
                    className={classNames(
                      "__wab_instance",
                      sty.diagramCard__qdn4G
                    )}
                  />
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__lfUs9)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__ggeIu)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("72px" as const)
                        : ("none" as const)
                    }
                    displayMaxWidth={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("72px" as const)
                        : ("100%" as const)
                    }
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: dollarpngUwNWuslVpM5Bg,
                      fullWidth: 100,
                      fullHeight: 100,
                      aspectRatio: undefined
                    }}
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__yNqli)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("72px" as const)
                        : ("none" as const)
                    }
                    displayMaxWidth={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("72px" as const)
                        : ("100%" as const)
                    }
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: messagepngF53B4JwhAfYy8,
                      fullWidth: 100,
                      fullHeight: 100,
                      aspectRatio: undefined
                    }}
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__uTcVr)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("72px" as const)
                        : ("none" as const)
                    }
                    displayMaxWidth={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("72px" as const)
                        : ("100%" as const)
                    }
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: importpng5ZHcUlmqTqnm2,
                      fullWidth: 100,
                      fullHeight: 100,
                      aspectRatio: undefined
                    }}
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img___2X73X)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("72px" as const)
                        : ("none" as const)
                    }
                    displayMaxWidth={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("72px" as const)
                        : ("100%" as const)
                    }
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: lineBranchpngL5U3BYsRmfz5T,
                      fullWidth: 100,
                      fullHeight: 100,
                      aspectRatio: undefined
                    }}
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__joiwr)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("72px" as const)
                        : ("none" as const)
                    }
                    displayMaxWidth={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("72px" as const)
                        : ("100%" as const)
                    }
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: exportpngGUezgXjZ8RMaW,
                      fullWidth: 100,
                      fullHeight: 100,
                      aspectRatio: undefined
                    }}
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__fTgdq)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("72px" as const)
                        : ("none" as const)
                    }
                    displayMaxWidth={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("72px" as const)
                        : ("100%" as const)
                    }
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: message2Png1Kl2LbfUvDzGq,
                      fullWidth: 100,
                      fullHeight: 100,
                      aspectRatio: undefined
                    }}
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__cvzgI)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("72px" as const)
                        : ("none" as const)
                    }
                    displayMaxWidth={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("72px" as const)
                        : ("100%" as const)
                    }
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: message3PngD4BbIcUhBiOz4,
                      fullWidth: 100,
                      fullHeight: 100,
                      aspectRatio: undefined
                    }}
                  />
                </p.Stack>

                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2__aDxnj
                  )}
                >
                  {"Lorem ipsum dolor \nsit amet"}
                </h2>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___69K8Z
                  )}
                >
                  {
                    "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
                  }
                </div>
              </div>
            </Section>

            <Section
              data-plasmic-name={"deviceSection"}
              data-plasmic-override={overrides.deviceSection}
              background={"dark" as const}
              className={classNames("__wab_instance", sty.deviceSection)}
              size={
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? ("mobile" as const)
                  : undefined
              }
            >
              <div className={classNames(projectcss.all, sty.freeBox__jtJPt)}>
                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2__eNdX9
                  )}
                >
                  {"Lorem ipsum dolor sit amet"}
                </h2>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__eYfno
                  )}
                >
                  {hasVariant(globalVariants, "screen", "mobileOnly")
                    ? "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do \neiusmod tempor incididunt ut labore et dolore magna aliqua."
                    : "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do \neiusmod tempor incididunt ut labore et dolore magna aliqua."}
                </div>
              </div>

              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__fq5T2)}
                displayHeight={"auto" as const}
                displayMaxHeight={"none" as const}
                displayMaxWidth={
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? ("360px" as const)
                    : ("100%" as const)
                }
                displayMinHeight={"0" as const}
                displayMinWidth={"0" as const}
                displayWidth={"auto" as const}
                loading={"lazy" as const}
                src={{
                  src: macbookpngEvE3PrLUxAfA,
                  fullWidth: 900,
                  fullHeight: 565,
                  aspectRatio: undefined
                }}
              />
            </Section>

            <Section
              data-plasmic-name={"gallerySection"}
              data-plasmic-override={overrides.gallerySection}
              className={classNames("__wab_instance", sty.gallerySection)}
              size={"fullContentGallery" as const}
            >
              <div className={classNames(projectcss.all, sty.freeBox__lzYyo)}>
                <div className={classNames(projectcss.all, sty.columns__rPqY)}>
                  <div
                    className={classNames(projectcss.all, sty.column__mRQvB)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__q5Pxe)}
                      displayHeight={"100%" as const}
                      displayMaxHeight={"300px" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                      src={{
                        src: galleri11PngWyl41FfXgpsy2,
                        fullWidth: 700,
                        fullHeight: 300,
                        aspectRatio: undefined
                      }}
                    />
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__oV7Qc)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__ePw5H)}
                      displayHeight={"100%" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                      src={{
                        src: galleri12PngQA7NgXuUmLmDn,
                        fullWidth: 700,
                        fullHeight: 300,
                        aspectRatio: undefined
                      }}
                    />
                  </div>

                  <div className={classNames(projectcss.all, sty.column__lNr2)}>
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__jzt5F)}
                      displayHeight={"100%" as const}
                      displayMaxHeight={"300px" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                      src={{
                        src: galleri13PngJjccKjCldDgm,
                        fullWidth: 700,
                        fullHeight: 300,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                </div>

                <div className={classNames(projectcss.all, sty.columns__bhhh)}>
                  <div
                    className={classNames(projectcss.all, sty.column__niCn2)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__bpKc)}
                      displayHeight={"100%" as const}
                      displayMaxHeight={"300px" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                      src={{
                        src: galleri21PngDwtQc2QXpUqzz,
                        fullWidth: 700,
                        fullHeight: 300,
                        aspectRatio: undefined
                      }}
                    />
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__qgpnf)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__fFupS)}
                      displayHeight={"100%" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                      src={{
                        src: galleri22PngU7M2Eth9Vg0Iz,
                        fullWidth: 700,
                        fullHeight: 300,
                        aspectRatio: undefined
                      }}
                    />
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__mkLqo)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__o359Y)}
                      displayHeight={"100%" as const}
                      displayMaxHeight={"300px" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                      src={{
                        src: galleri23PngOer3XeAxtePgz,
                        fullWidth: 700,
                        fullHeight: 300,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                </div>
              </div>
            </Section>

            <Section
              data-plasmic-name={"productSection"}
              data-plasmic-override={overrides.productSection}
              className={classNames("__wab_instance", sty.productSection)}
              size={
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? ("mobile" as const)
                  : undefined
              }
            >
              <div className={classNames(projectcss.all, sty.freeBox__rFclv)}>
                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2__dZex5
                  )}
                >
                  {"Lorem ipsum dolor sit amet"}
                </h2>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__coAki
                  )}
                >
                  {
                    "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do \neiusmod tempor incididunt ut labore et dolore magna aliqua."
                  }
                </div>

                <Button
                  className={classNames("__wab_instance", sty.button__vgkzw)}
                  color={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? ("blue" as const)
                      : ("blue" as const)
                  }
                  endIcon={
                    <svg
                      className={classNames(projectcss.all, sty.svg__js9AO)}
                      role={"img"}
                    />
                  }
                  link={"#" as const}
                  startIcon={
                    <svg
                      className={classNames(projectcss.all, sty.svg__wJRnd)}
                      role={"img"}
                    />
                  }
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ioM4X
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "Get Started"
                      : "Get Started"}
                  </div>
                </Button>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__rQj3M)}
                >
                  <ProductCard
                    className={classNames(
                      "__wab_instance",
                      sty.productCard__vq948
                    )}
                  />

                  <ProductCard
                    className={classNames(
                      "__wab_instance",
                      sty.productCard__z38Wu
                    )}
                  />
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__feTo)}
                >
                  <ProductCard
                    className={classNames(
                      "__wab_instance",
                      sty.productCard__arg0Z
                    )}
                  />

                  <ProductCard
                    className={classNames(
                      "__wab_instance",
                      sty.productCard___6F3P3
                    )}
                  />
                </p.Stack>
              </div>
            </Section>

            <Section
              data-plasmic-name={"aboutSection"}
              data-plasmic-override={overrides.aboutSection}
              background={"dark" as const}
              className={classNames("__wab_instance", sty.aboutSection)}
              size={
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? ("mobile" as const)
                  : undefined
              }
            >
              <div className={classNames(projectcss.all, sty.freeBox__vd9Ji)}>
                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2__dkjb8
                  )}
                >
                  {hasVariant(globalVariants, "screen", "mobileOnly")
                    ? "What people say \nabout us"
                    : "What people say about us"}
                </h2>

                <div className={classNames(projectcss.all, sty.freeBox__sUFqK)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__vuuQs)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__wrdNr)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? ("339px" as const)
                          : ("100%" as const)
                      }
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                      src={{
                        src: aboutImgpngKOtm3R0VUf5R,
                        fullWidth: 400,
                        fullHeight: 500,
                        aspectRatio: undefined
                      }}
                    />
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.freeBox__utoK)}
                  >
                    <h2
                      className={classNames(
                        projectcss.all,
                        projectcss.h2,
                        projectcss.__wab_text,
                        sty.h2__jiIMf
                      )}
                    >
                      {"Michael Justin"}
                    </h2>

                    <div
                      className={classNames(projectcss.all, sty.freeBox__eMfx6)}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__nhmmu)}
                        displayHeight={"auto" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"auto" as const}
                        loading={"lazy" as const}
                        src={{
                          src: aboutIpsumpngCkVGaZkLbo89,
                          fullWidth: 152,
                          fullHeight: 40,
                          aspectRatio: undefined
                        }}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__sXvQl
                        )}
                      >
                        {hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "CEO Company"
                          : "CEO Company"}
                      </div>
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.freeBox__moPqh)}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__qJb46)}
                        displayHeight={"auto" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={
                          hasVariant(globalVariants, "screen", "mobileOnly")
                            ? ("auto" as const)
                            : ("auto" as const)
                        }
                        loading={"lazy" as const}
                        src={{
                          src: backtippngEE9To8Qz8XEkX,
                          fullWidth: 34,
                          fullHeight: 32,
                          aspectRatio: undefined
                        }}
                      />
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__yauOf
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
                        : "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."}
                    </div>
                  </div>
                </div>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___6ZtyQ)}
                >
                  <DetailAbout
                    className={classNames(
                      "__wab_instance",
                      sty.detailAbout__tpe56
                    )}
                  />

                  <DetailAbout
                    className={classNames(
                      "__wab_instance",
                      sty.detailAbout__p0Yx
                    )}
                  />

                  <DetailAbout
                    className={classNames(
                      "__wab_instance",
                      sty.detailAbout__rmqus
                    )}
                  />
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__yncyF)}
                >
                  <DetailAbout
                    className={classNames(
                      "__wab_instance",
                      sty.detailAbout___2QjzP
                    )}
                  />

                  <DetailAbout
                    className={classNames(
                      "__wab_instance",
                      sty.detailAbout__a2Ia9
                    )}
                  />

                  <DetailAbout
                    className={classNames(
                      "__wab_instance",
                      sty.detailAbout__w8J25
                    )}
                  />
                </p.Stack>

                {(
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? true
                    : true
                ) ? (
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__mKjFp)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: arrowLeftpng0FXeSj3JqjF7G,
                      fullWidth: 24,
                      fullHeight: 24,
                      aspectRatio: undefined
                    }}
                  />
                ) : null}
                {(
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? true
                    : true
                ) ? (
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__tzdXr)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: arrowRightpng2BiWqcf7DjW7XG,
                      fullWidth: 24,
                      fullHeight: 24,
                      aspectRatio: undefined
                    }}
                  />
                ) : null}
              </div>
            </Section>

            {true ? (
              <PriceSection
                data-plasmic-name={"priceSection"}
                data-plasmic-override={overrides.priceSection}
                className={classNames("__wab_instance", sty.priceSection)}
              />
            ) : null}

            <Section
              data-plasmic-name={"startSection"}
              data-plasmic-override={overrides.startSection}
              className={classNames("__wab_instance", sty.startSection)}
              size={"fullContentWidth" as const}
            >
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__n3KMg)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__zyBw4)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: pricingImgsvgTEWj4C4ZDvCf,
                      fullWidth: 300,
                      fullHeight: 67,
                      aspectRatio: 4.468401
                    }}
                  />

                  <div
                    className={classNames(projectcss.all, sty.columns__yigm5)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__csZx)}
                    >
                      <h3
                        data-plasmic-name={"h3"}
                        data-plasmic-override={overrides.h3}
                        className={classNames(
                          projectcss.all,
                          projectcss.h3,
                          projectcss.__wab_text,
                          sty.h3
                        )}
                      >
                        {hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "Start using our product today"
                          : "Start using our product today"}
                      </h3>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__imVAg
                        )}
                      >
                        {hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "Faster than free analytics tools. Access to all your data, with respect to the privacy of your users."
                          : "Faster than free analytics tools. Access to all your data, with respect to the privacy of your users."}
                      </div>
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.column__sOmh)}
                    >
                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button__lbuRw
                        )}
                        color={"white" as const}
                        endIcon={
                          <svg
                            className={classNames(
                              projectcss.all,
                              sty.svg__my0QT
                            )}
                            role={"img"}
                          />
                        }
                        link={"#" as const}
                        startIcon={
                          <svg
                            className={classNames(
                              projectcss.all,
                              sty.svg__l87Dr
                            )}
                            role={"img"}
                          />
                        }
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__yuvZt
                          )}
                        >
                          {hasVariant(globalVariants, "screen", "mobileOnly")
                            ? "Get Started"
                            : "Get Started"}
                        </div>
                      </Button>
                    </div>
                  </div>
                </div>
              ) : null}
            </Section>

            {true ? (
              <Section
                data-plasmic-name={"pricingSection"}
                data-plasmic-override={overrides.pricingSection}
                className={classNames("__wab_instance", sty.pricingSection)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__typsM)}>
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.columns__o9Hr3)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__nnv8W)}
                    >
                      <PriceCard
                        borders={["flatLeft"]}
                        className={classNames(
                          "__wab_instance",
                          sty.priceCard__e9RG8
                        )}
                      />
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.column___862Ti)}
                    >
                      <PriceCard
                        borders={["flatCenter"]}
                        className={classNames(
                          "__wab_instance",
                          sty.priceCard__btxCo
                        )}
                      />

                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___6YiEg
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__vqzdN
                            )}
                          >
                            {hasVariant(globalVariants, "screen", "mobileOnly")
                              ? "We Recommended"
                              : "We Recommended"}
                          </div>
                        </div>
                      ) : null}
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.column___8EXP)}
                    >
                      <PriceCard
                        borders={["flatRight"]}
                        className={classNames(
                          "__wab_instance",
                          sty.priceCard___1Lhg
                        )}
                      />
                    </div>
                  </p.Stack>
                </div>
              </Section>
            ) : null}
            {true ? (
              <FooterSection
                data-plasmic-name={"footerSection"}
                data-plasmic-override={overrides.footerSection}
                className={classNames("__wab_instance", sty.footerSection)}
              />
            ) : null}
          </div>
        ) : null}
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "headerHeroSection",
    "navbar",
    "h1",
    "diagramSection",
    "deviceSection",
    "gallerySection",
    "productSection",
    "aboutSection",
    "priceSection",
    "startSection",
    "h3",
    "pricingSection",
    "footerSection"
  ],
  headerHeroSection: ["headerHeroSection", "navbar", "h1"],
  navbar: ["navbar"],
  h1: ["h1"],
  diagramSection: ["diagramSection"],
  deviceSection: ["deviceSection"],
  gallerySection: ["gallerySection"],
  productSection: ["productSection"],
  aboutSection: ["aboutSection"],
  priceSection: ["priceSection"],
  startSection: ["startSection", "h3"],
  h3: ["h3"],
  pricingSection: ["pricingSection"],
  footerSection: ["footerSection"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  headerHeroSection: "div";
  navbar: typeof Navbar;
  h1: "h1";
  diagramSection: typeof Section;
  deviceSection: typeof Section;
  gallerySection: typeof Section;
  productSection: typeof Section;
  aboutSection: typeof Section;
  priceSection: typeof PriceSection;
  startSection: typeof Section;
  h3: "h3";
  pricingSection: typeof Section;
  footerSection: typeof FooterSection;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage__VariantsArgs;
    args?: PlasmicHomepage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomepage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicHomepage__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicHomepage__ArgProps,
          internalVariantPropNames: PlasmicHomepage__VariantProps
        }),
      [props, nodeName]
    );

    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    headerHeroSection: makeNodeComponent("headerHeroSection"),
    navbar: makeNodeComponent("navbar"),
    h1: makeNodeComponent("h1"),
    diagramSection: makeNodeComponent("diagramSection"),
    deviceSection: makeNodeComponent("deviceSection"),
    gallerySection: makeNodeComponent("gallerySection"),
    productSection: makeNodeComponent("productSection"),
    aboutSection: makeNodeComponent("aboutSection"),
    priceSection: makeNodeComponent("priceSection"),
    startSection: makeNodeComponent("startSection"),
    h3: makeNodeComponent("h3"),
    pricingSection: makeNodeComponent("pricingSection"),
    footerSection: makeNodeComponent("footerSection"),

    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "Home",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
